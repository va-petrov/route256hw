version: "3.1"
services:
  pgcheckout:
    image: postgres:15.1
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
#    ports:
#      - "5432:5432"
    volumes:
      - ./data/checkout:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      # noinspection ComposeUnknownKeys
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
  pgbcheckout:
    image: edoburu/pgbouncer
    environment:
      DATABASE_URL: postgres://user:password@pgcheckout:5432/checkout
      AUTH_TYPE: plain
    ports:
      - "5432:5432"
    depends_on:
      - pgcheckout
#  pgbcheckout:
#    image: vapet/odyssey:test
#    ports:
#      - "5432:6432"
#    volumes:
#      - ./checkout/odyssey.conf:/odyssey.conf
#    depends_on:
#      - pgcheckout
  checkout:
    image: checkout
    build: ./checkout/
    environment:
      DATABASE_URL: postgres://user:password@pgbcheckout:5432/checkout
    ports:
      - "8080:8080"
    depends_on:
      - pgbcheckout
    volumes:
      - ./logs/data/checkout.txt:/log.txt
    command:
      - "/bin/sh"
      - "-c"
      - "/app 2>&1 | tee /log.txt"
  pgloms:
    image: postgres:15.1
    environment:
      POSTGRES_DB: loms
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5433:5432"
    volumes:
      - ./data/loms:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      # noinspection ComposeUnknownKeys
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
#  pgbloms:
#    image: edoburu/pgbouncer
#    environment:
#      DATABASE_URL: postgres://user:password@pgloms:5432/loms
#      AUTH_TYPE: plain
#    ports:
#      - "5433:5432"
#    depends_on:
#      - pgloms
#  pgbloms:
#    image: vapet/odyssey:test
#    ports:
#      - "5433:6432"
#    volumes:
#      - ./loms/odyssey.conf:/odyssey.conf
#    depends_on:
#      - pgloms
  loms:
    image: loms
    build: ./loms/
    environment:
      DATABASE_URL: postgres://user:password@pgloms:5432/loms?sslmode=disable
    ports:
      - "8081:8081"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - ./logs/data/loms.txt:/log.txt
    command:
      - "/bin/sh"
      - "-c"
      - "/app 2>&1 | tee /log.txt"
    depends_on:
      pgloms:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
  notifications:
    image: notifications
    build: ./notifications/
    ports:
      - "8082:8082"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - ./logs/data/notifications.txt:/log.txt
    command:
      - "/bin/sh"
      - "-c"
      - "/app 2>&1 | tee /log.txt"
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy

  # kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zookeeper:2888:3888
  kafka1:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka1:29091", "--list"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9091:9091"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://${HOST_IP:-localhost}:9091
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - ZOOKEEPER=zookeeper:2181
  kafka2:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka1:29091", "--list"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://${HOST_IP:-localhost}:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=2
      - ZOOKEEPER=zookeeper:2181
  kafka3:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka1:29091", "--list"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9093:9093"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka3:29093,LISTENER_EXT://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka3:29093,LISTENER_EXT://${HOST_IP:-localhost}:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=3
      - ZOOKEEPER=zookeeper:2181