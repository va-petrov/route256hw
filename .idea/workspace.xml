<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="691e2df9-a601-4956-9b31-7ac1929f84bf" name="Changes" comment="[GOHW-7]: structured logging">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/checkout/cmd/app/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/checkout/cmd/app/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/libs/logger/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/libs/logger/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/loms/cmd/app/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/loms/cmd/app/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notifications/cmd/app/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/notifications/cmd/app/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="devtask/GOHW-6" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2MYRFDSKOECoGxX6BKYBZXhGizj" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/vasya/go/homework/notifications&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ],
    &quot;com.intellij.ide.scratch.LRUPopupBuilder$1/SQL Dialect&quot;: [
      &quot;PostgreSQL&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/checkout/internal/service/model" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/notifications" />
      <recent name="$PROJECT_DIR$/checkout" />
      <recent name="$PROJECT_DIR$/product-service" />
      <recent name="$PROJECT_DIR$/checkout/internal/api/checkout_v1" />
      <recent name="$PROJECT_DIR$/loms/internal/api/loms_v1" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/loms/internal/service" />
      <recent name="$PROJECT_DIR$/libs" />
      <recent name="$PROJECT_DIR$/loms" />
      <recent name="$PROJECT_DIR$/loms/api" />
      <recent name="$PROJECT_DIR$/checkout/api" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test service">
    <configuration name="TestListCart in route256/checkout/internal/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="homework" />
      <working_directory value="$PROJECT_DIR$/checkout/internal/service" />
      <root_directory value="$PROJECT_DIR$/checkout" />
      <kind value="PACKAGE" />
      <package value="route256/checkout/internal/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestListCart\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestListCart/positive_test in route256/checkout/internal/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="homework" />
      <working_directory value="$PROJECT_DIR$/checkout/internal/service" />
      <root_directory value="$PROJECT_DIR$/checkout" />
      <kind value="PACKAGE" />
      <package value="route256/checkout/internal/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestListCart\E$/^\Qpositive_test\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="homework" />
      <working_directory value="$PROJECT_DIR$/checkout/internal/service" />
      <root_directory value="$PROJECT_DIR$/checkout" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$/checkout/internal/service" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="list_cart_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="homework" />
      <working_directory value="$PROJECT_DIR$/checkout/internal/service" />
      <root_directory value="$PROJECT_DIR$/checkout" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/checkout/internal/service/list_cart_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="purchase_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="homework" />
      <working_directory value="$PROJECT_DIR$/checkout/internal/service" />
      <root_directory value="$PROJECT_DIR$/checkout" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/checkout/internal/service/purchase_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test service" />
        <item itemvalue="Go Test.purchase_test.go" />
        <item itemvalue="Go Test.list_cart_test.go" />
        <item itemvalue="Go Test.TestListCart in route256/checkout/internal/service" />
        <item itemvalue="Go Test.TestListCart/positive_test in route256/checkout/internal/service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="devtask/GOHW-7" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[GOHW-2]: grpc project init" />
    <MESSAGE value="[GOHW-2]: product service client going gRPC way" />
    <MESSAGE value="[GOHW-2]: all services working by gRPC" />
    <MESSAGE value="[GOHW-2]: refactor proto and protoc generated files into service dirs" />
    <MESSAGE value="[GOHW-3]: basic migrations, docker-compose with postgresql, pgbouncer and odyssey" />
    <MESSAGE value="[GOHW-3]: basic migrations, docker-compose with postgresql, pgbouncer and odyssey 2" />
    <MESSAGE value="[GOHW-3]: checkout service working with postgresql db" />
    <MESSAGE value="[GOHW-3]: loms service working with postgresql db (without transactions)" />
    <MESSAGE value="[GOHW-4]: cancel unpayed orders and delete staled reservations jobs, GOHW-3 debt" />
    <MESSAGE value="[GOHW-4]: simple rate limiter for products client" />
    <MESSAGE value="[GOHW-4]: parallel productInfo requests" />
    <MESSAGE value="[GOHW-5]: tests in checkout service" />
    <MESSAGE value="[GOHW-6]: kafka config in docker-compose.yml" />
    <MESSAGE value="[GOHW-6]: loms service sending notifications on order status changes" />
    <MESSAGE value="[GOHW-6]: notifications service logging order state change notifications from kafka" />
    <MESSAGE value="[GOHW-7]: structured logging" />
    <option name="LAST_COMMIT_MESSAGE" value="[GOHW-7]: structured logging" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/homework$list_cart_test_go.out" NAME="list_cart_test.go Coverage Results" MODIFIED="1680053910672" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/homework$purchase_test_go.out" NAME="purchase_test.go Coverage Results" MODIFIED="1680055684380" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/homework$go_test_service.out" NAME="go test service Coverage Results" MODIFIED="1680055755666" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>